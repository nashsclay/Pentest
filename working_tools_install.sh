#!/bin/bash
PROGRAMS_LOCATION="/home/$SUDO_USER/Tools/Programs"
SCRIPTS_LOCATION="/home/$SUDO_USER/Tools/Scripts"
SETUPFILES_LOCATION="/home/$SUDO_USER/Tools/Setup_Files"
mkdir -p "$PROGRAMS_LOCATION"
mkdir -p "$SCRIPTS_LOCATION"
mkdir -p "$SETUPFILES_LOCATION"

# ****Obtaining scripts****
git clone https://github.com/dafthack/MSOLSpray "$SCRIPTS_LOCATION/MSOLSpray"
git clone https://github.com/Kevin-Robertson/Tater.git "$SCRIPTS_LOCATION/Tater"
git clone https://github.com/mzet-/linux-exploit-suggester.git "$SCRIPTS_LOCATION/LES"
git clone https://github.com/orlyjamie/mimikittenz.git "$SCRIPTS_LOCATION/Mimikittenz"
git clone https://github.com/rebootuser/LinEnum.git "$SCRIPTS_LOCATION/LinEnum"
git clone https://github.com/carlospolop/PEASS-ng.git "$SCRIPTS_LOCATION/WinandLinPeas"
# ****Scripts obtained****

# ****One-line installs****
wget https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh -P "$SETUPFILES_LOCATION"
chmod +x "$SETUPFILES_LOCATION/Joplin_install_and_update.sh"
su "$SUDO_USER" -s "$SETUPFILES_LOCATION/Joplin_install_and_update.sh"
# ****End one-line installs****

# ****Install of ip2provider****
if ! [ -L "/usr/local/bin/ip2provider" ]; then
git clone https://github.com/oldrho/ip2provider.git "$PROGRAMS_LOCATION/ip2provider"
pip3 install -r "$PROGRAMS_LOCATION/ip2provider/requirements.txt"
ln -s "$PROGRAMS_LOCATION/ip2provider/ip2provider.py" /usr/local/bin/ip2provider
else
printf "\n ip2provider already installed"
fi
# ****End install of ip2provider****

# ****Install of sublist3r****
if ! [ -L "/usr/local/bin/sublist3r" ]; then
git clone https://github.com/aboul3la/Sublist3r.git "$PROGRAMS_LOCATION/Sublist3r"
pip3 install -r "$PROGRAMS_LOCATION/Sublist3r/requirements.txt"
ln -s "$PROGRAMS_LOCATION/Sublist3r/sublist3r.py" /usr/local/bin/sublist3r
else
printf "\n sublist3r already installed"
fi
# ****End install of sublist3r****

# ****Install of cloud_enum****
if ! [ -L "/usr/local/bin/cloud_enum" ]; then
git clone https://github.com/initstring/cloud_enum.git "$PROGRAMS_LOCATION/cloud_enum"
pip3 install -r "$PROGRAMS_LOCATION/cloud_enum/requirements.txt"
ln -s "$PROGRAMS_LOCATION/cloud_enum/cloud_enum.py" /usr/local/bin/cloud_enum
else
printf "\n cloud_enum already installed"
fi
# ****End install of cloud_enum****

# ****Install of spiderfoot****
if ! [ -L "/usr/local/bin/spiderfoot" ]; then
wget https://github.com/smicallef/spiderfoot/archive/v4.0.tar.gz -P "$SETUPFILES_LOCATION"
tar zxvf "$SETUPFILES_LOCATION"/v4.0.tar.gz -C "$SETUPFILES_LOCATION"
mv "$SETUPFILES_LOCATION"/spiderfoot-4.0 "$PROGRAMS_LOCATION"
pip3 install -r "$PROGRAMS_LOCATION/spiderfoot-4.0/requirements.txt"
ln -s "$PROGRAMS_LOCATION/spiderfoot-4.0/sf.py" /usr/local/bin/spiderfoot
else
printf "\n spiderfoot already installed"
fi
# ****End install of spiderfoot****

# ****Install of cloudsploit****
if ! [ -L "/usr/local/bin/cloudsploit" ]; then
git clone https://github.com/aquasecurity/cloudsploit.git "$PROGRAMS_LOCATION/cloudsploit"
npm --prefix "$PROGRAMS_LOCATION/cloudsploit" install "$PROGRAMS_LOCATION/cloudsploit"
chmod +x "$PROGRAMS_LOCATION/cloudsploit/index.js"
ln -s "$PROGRAMS_LOCATION/cloudsploit/index.js" /usr/local/bin/cloudsploit
else
printf "\n cloudsploit already installed"
fi
# ****End install of cloudsploit****

# ****Install of pacu****
# if ! [ -L "/usr/local/bin/pacu" ]; then
# git clone https://github.com/RhinoSecurityLabs/pacu.git "$PROGRAMS_LOCATION/pacu"
# pip install -r "$PROGRAMS_LOCATION/pacu/requirements.txt"
# ln -s "$PROGRAMS_LOCATION/pacu/cli.py" /usr/local/bin/pacu
# else
# printf "\n pacu already installed"
# fi
# ****End install of pacu****

# ****Install of Nuclei****
if ! [ -f "/usr/bin/nuclei" ]; then
git clone https://github.com/projectdiscovery/nuclei.git "$PROGRAMS_LOCATION/nuclei"
CUR_DIR=$(pwd)
cd "$PROGRAMS_LOCATION/nuclei/v2/cmd/nuclei"
go build
cd "$CUR_DIR"
ln -s "$PROGRAMS_LOCATION/nuclei/v2/cmd/nuclei/nuclei" /usr/local/bin/nuclei
else
printf "\n nuclei already installed"
fi
# ****End install of Nuclei****

# ****Install of Prowler
if ! [ -L "/usr/local/bin/prowler" ]; then
pip install detect-secrets==1.0.3
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
mv awscliv2.zip "$SETUPFILES_LOCATION"
unzip "$SETUPFILES_LOCATION/awscliv2.zip" -d "$PROGRAMS_LOCATION"
bash "$PROGRAMS_LOCATION/aws/install"
git clone https://github.com/prowler-cloud/prowler "$PROGRAMS_LOCATION/prowler"
ln -s "$PROGRAMS_LOCATION/prowler/prowler" /usr/local/bin/prowler
sed -i 's/PROWLER_DIR=$(dirname "$0")/PROWLER_DIR="$(dirname "$(readlink -f "$0")")"/' "$PROGRAMS_LOCATION/prowler/prowler"
else
printf "\n prowler already installed"
fi
# ****End install of Prowler****

# ****Install of Neo4j****
# curl -O https://download-gcdn.ej-technologies.com/install4j/install4j_linux-x64_9_0_6.deb
# mv install4j_linux-x64_9_0_6.deb "$SETUPFILES_LOCATION"
# dpkg -i "$SETUPFILES_LOCATION"/install4j_linux-x64_9_0_6.deb
# ****End install of Neo4j****

# ****Install of GitLeaks****
if ! [ -L "/usr/share/gitleaks" ]; then
git clone https://github.com/zricethezav/gitleaks.git "$PROGRAMS_LOCATION/gitleaks"
make -C "$PROGRAMS_LOCATION"/gitleaks build
ln -s "$PROGRAMS_LOCATION/gitleaks/gitleaks" /usr/local/bin/gitleaks
else
printf "\n gitleaks already installed"
fi
# ****End install of GitLeaks****

# ****Install of Shhgit****
# apt install docker-compose
# git clone https://github.com/eth0izzle/shhgit.git
# docker-compose -f shhgit/docker-compose.yml build
# ****End Install of Shhgit****

# ****Install of Sn1per****
# if ! [ -L "/usr/share/sn1per" ]; then
# git clone https://github.com/1N3/Sn1per "$PROGRAMS_LOCATION/sn1per"
# bash "$PROGRAMS_LOCATION/sn1per/install.sh"
# else
# printf "\n sn1per already installed"
# fi
# ****End install of Sn1per****

printf "\n\n END OF SCRIPT"
